{"ast":null,"code":"var _jsxFileName = \"D:\\\\coso codoso\\\\Scheduler 3000\\\\scheduler-3000-frontend\\\\src\\\\components\\\\month.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport useCheckMonth from \"./useCheckMonth\";\nimport Day from \"./day\";\nimport DayCard from \"./dayCard\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Month = ({\n  setTitle,\n  handleComponentChange\n}) => {\n  _s();\n  const {\n    tasks,\n    loading,\n    error,\n    currentMonth,\n    setCurrentMonth,\n    checkAndCreateTasks\n  } = useCheckMonth();\n  moment.locale(\"es\");\n  setTitle(moment(currentMonth, \"YYYY-MM\").format(\"MMMM YYYY\").replace(/^\\w/, c => c.toUpperCase()));\n  const daysInMonth = moment(currentMonth, \"YYYY-MM\").daysInMonth();\n  const daysArray = Array.from({\n    length: daysInMonth\n  }, (_, i) => moment(currentMonth, \"YYYY-MM\").date(i + 1).toDate());\n  const emptySpacesStart = (daysArray[0].getDay() + 6) % 7;\n  const emptySpacesEnd = (7 - daysArray[daysArray.length - 1].getDay()) % 7;\n  const mainDivStyles = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '90vh'\n  };\n  const daysDivStyles = {\n    border: '2px solid grey',\n    width: '90%',\n    display: 'flex',\n    flexWrap: 'wrap'\n  };\n  const emptyDivStyles = {\n    background: 'repeating-linear-gradient(45deg, #ccc, #ccc 10px, #eee 10px, #eee 20px)',\n    border: '2px solid grey',\n    width: 'calc(14.28571428% - 4px)',\n    aspectRatio: '1 / 0.5',\n    margin: '0px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: mainDivStyles,\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        position: 'absolute'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: daysDivStyles,\n      children: [Array.from({\n        length: emptySpacesStart\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: emptyDivStyles\n      }, `empty-start-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), daysArray.map(day => /*#__PURE__*/_jsxDEV(DayCard, {\n        date: day,\n        data: {\n          tasks\n        },\n        handleComponentChange: handleComponentChange,\n        tasks: tasks\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)), Array.from({\n        length: emptySpacesEnd\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: emptyDivStyles\n      }, `empty-end-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Month, \"TSVjYZOt0NGm0RHgngA6yOlFU/o=\", false, function () {\n  return [useCheckMonth];\n});\n_c = Month;\nexport default Month;\nvar _c;\n$RefreshReg$(_c, \"Month\");","map":{"version":3,"names":["React","useState","useCheckMonth","Day","DayCard","moment","jsxDEV","_jsxDEV","Month","setTitle","handleComponentChange","_s","tasks","loading","error","currentMonth","setCurrentMonth","checkAndCreateTasks","locale","format","replace","c","toUpperCase","daysInMonth","daysArray","Array","from","length","_","i","date","toDate","emptySpacesStart","getDay","emptySpacesEnd","mainDivStyles","display","flexWrap","alignItems","justifyContent","height","daysDivStyles","border","width","emptyDivStyles","background","aspectRatio","margin","flexDirection","style","children","position","fileName","_jsxFileName","lineNumber","columnNumber","color","map","index","day","data","_c","$RefreshReg$"],"sources":["D:/coso codoso/Scheduler 3000/scheduler-3000-frontend/src/components/month.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport useCheckMonth from \"./useCheckMonth\";\r\nimport Day from \"./day\";\r\nimport DayCard from \"./dayCard\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\n\r\nconst Month = ({setTitle, handleComponentChange}) => {\r\n  const { tasks, loading, error, currentMonth, setCurrentMonth, checkAndCreateTasks } = useCheckMonth();  \r\n  moment.locale(\"es\");\r\n  setTitle(moment(currentMonth, \"YYYY-MM\").format(\"MMMM YYYY\").replace(/^\\w/, (c) => c.toUpperCase()));  \r\n\r\n  const daysInMonth = moment(currentMonth, \"YYYY-MM\").daysInMonth();\r\n  const daysArray = Array.from({ length: daysInMonth }, (_, i) =>\r\n    moment(currentMonth, \"YYYY-MM\").date(i + 1).toDate()\r\n  );\r\n  const emptySpacesStart = (daysArray[0].getDay() + 6) % 7;\r\n  const emptySpacesEnd = (7- daysArray[daysArray.length - 1].getDay()) % 7;\r\n\r\n  const mainDivStyles = {    \r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '90vh'\r\n  };\r\n\r\n  const daysDivStyles = {\r\n    border: '2px solid grey',\r\n    width: '90%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',    \r\n  };\r\n\r\n  const emptyDivStyles = {\r\n    background: 'repeating-linear-gradient(45deg, #ccc, #ccc 10px, #eee 10px, #eee 20px)',\r\n    border: '2px solid grey',\r\n    width: 'calc(14.28571428% - 4px)',\r\n    aspectRatio: '1 / 0.5',\r\n    margin: '0px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',      \r\n  };\r\n\r\n  return (\r\n    <div style={mainDivStyles}>\r\n      {loading && <p style={{position:'absolute'}}>Loading...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      \r\n      <div style={daysDivStyles}>\r\n        {Array.from({ length: emptySpacesStart }).map((_, index) => (\r\n          <div key={`empty-start-${index}`} style={emptyDivStyles} />\r\n        ))}\r\n        {daysArray.map((day) => (\r\n          <DayCard key={day} date={day} data={{ tasks }} handleComponentChange={handleComponentChange} tasks={tasks} />\r\n        ))}\r\n        {Array.from({ length: emptySpacesEnd }).map((_, index) => (\r\n          <div key={`empty-end-${index}`} style={emptyDivStyles} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
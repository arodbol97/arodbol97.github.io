{"ast":null,"code":"var _jsxFileName = \"D:\\\\coso codoso\\\\Scheduler 3000\\\\scheduler-3000-frontend\\\\src\\\\components\\\\day.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './task';\nimport useFetch from \"./useFetch\";\nimport NewTaskForm from './newTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Day = ({\n  date,\n  data\n}) => {\n  _s();\n  var _data$tasks;\n  const [showForm, setShowForm] = useState(false);\n  const headerStyles = {\n    backgroundColor: '#282c34',\n    minHeight: '10vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white'\n  };\n  const formattedDate = date ? date.toLocaleDateString('es-ES', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).replace(/^\\w/, char => char.toUpperCase()).replace(/(?:^|\\s)\\w/g, char => char.toUpperCase()) : 'No date provided';\n  const currentDateOnly = new Date(date);\n  currentDateOnly.setHours(0, 0, 0, 0);\n  const normalizeTaskDate = taskDate => {\n    const mysqlDate = new Date(taskDate);\n    mysqlDate.setHours(0, 0, 0, 0);\n    return mysqlDate;\n  };\n  const dayTasks = data === null || data === void 0 ? void 0 : (_data$tasks = data.tasks) === null || _data$tasks === void 0 ? void 0 : _data$tasks.filter(task => {\n    const taskDateNormalized = normalizeTaskDate(task.globalTaskDate);\n    console.log(normalizeTaskDate(task.globalTaskDate));\n    return currentDateOnly.getTime() === taskDateNormalized.getTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), dayTasks && dayTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks for today:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, task.taskId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks for today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: '#007bff',\n        color: 'white',\n        padding: '10px',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      onClick: () => setShowForm(!showForm),\n      children: showForm ? \"Cancelar\" : \"Nueva Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Day, \"kaMG6XwWu8g4QBLwMinxod9pp4Q=\");\n_c = Day;\nexport default Day;\nvar _c;\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"names":["React","useState","Task","useFetch","NewTaskForm","jsxDEV","_jsxDEV","Day","date","data","_s","_data$tasks","showForm","setShowForm","headerStyles","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","color","formattedDate","toLocaleDateString","weekday","year","month","day","replace","char","toUpperCase","currentDateOnly","Date","setHours","normalizeTaskDate","taskDate","mysqlDate","dayTasks","tasks","filter","task","taskDateNormalized","globalTaskDate","console","log","getTime","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","taskName","taskId","style","padding","border","cursor","onClick","_c","$RefreshReg$"],"sources":["D:/coso codoso/Scheduler 3000/scheduler-3000-frontend/src/components/day.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Task from './task';\r\nimport useFetch from \"./useFetch\";\r\nimport NewTaskForm from './newTaskForm'; \r\n\r\nconst Day = ({ date, data }) => {    \r\n  const [showForm, setShowForm] = useState(false);   \r\n\r\n  const headerStyles = {\r\n      backgroundColor: '#282c34',\r\n      minHeight: '10vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      color: 'white',\r\n  };\r\n\r\n  const formattedDate = date\r\n    ? date.toLocaleDateString('es-ES', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })\r\n        .replace(/^\\w/, (char) => char.toUpperCase())\r\n        .replace(/(?:^|\\s)\\w/g, (char) => char.toUpperCase())\r\n    : 'No date provided';\r\n  \r\n  const currentDateOnly = new Date(date);\r\n  currentDateOnly.setHours(0, 0, 0, 0); \r\n  \r\n  const normalizeTaskDate = (taskDate) => {\r\n    const mysqlDate = new Date(taskDate); \r\n    mysqlDate.setHours(0, 0, 0, 0); \r\n    return mysqlDate;\r\n  };\r\n  \r\n  const dayTasks = data?.tasks?.filter(task => {\r\n    const taskDateNormalized = normalizeTaskDate(task.globalTaskDate);\r\n    console.log(normalizeTaskDate(task.globalTaskDate));\r\n    return currentDateOnly.getTime() === taskDateNormalized.getTime();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {data}\r\n      <h1>{formattedDate}</h1>    \r\n\r\n      {dayTasks && dayTasks.length > 0 ? (\r\n        <div>\r\n          <h2>Tasks for today:</h2>\r\n          <ul>\r\n            {dayTasks.map((task) => (\r\n              <li key={task.taskId}>\r\n                <span>{task.taskName}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>No tasks for today</p>\r\n      )}\r\n      \r\n      <button \r\n        style={{ backgroundColor: '#007bff', color: 'white', padding: '10px', border: 'none', cursor: 'pointer' }}\r\n        onClick={() => setShowForm(!showForm)}\r\n      >\r\n        {showForm ? \"Cancelar\" : \"Nueva Tarea\"}\r\n      </button>\r\n      \r\n      {showForm && <NewTaskForm date={date} />}\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default Day;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\coso codoso\\\\Scheduler 3000\\\\scheduler-3000-frontend\\\\src\\\\components\\\\dayCard.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayCard = ({\n  date,\n  data\n}) => {\n  var _data$tasks;\n  const divStyles = {\n    backgroundColor: 'white',\n    border: '2px solid black',\n    width: 'calc(14.28571428% - 4px)',\n    aspectRatio: '1 / 0.5',\n    margin: '0px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n  const tasksDivStyles = {\n    backgroundColor: 'lightgrey',\n    width: '100%',\n    height: '10%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: 'auto'\n  };\n  const taskDivStyles = {\n    backgroundColor: 'green',\n    width: '20px',\n    height: '100%',\n    marginLeft: '2px'\n  };\n  const formattedDate = date ? date.toLocaleDateString('es-ES', {\n    weekday: 'long',\n    day: 'numeric'\n  }).replace(/^\\w/, char => char.toUpperCase()).replace(/(?:^|\\s)\\w/g, char => char.toUpperCase()) : 'No date provided';\n  const currentDateOnly = new Date(date);\n  currentDateOnly.setHours(0, 0, 0, 0);\n  const normalizeTaskDate = taskDate => {\n    const mysqlDate = new Date(taskDate);\n    mysqlDate.setHours(0, 0, 0, 0);\n    return mysqlDate;\n  };\n  const dayTasks = data === null || data === void 0 ? void 0 : (_data$tasks = data.tasks) === null || _data$tasks === void 0 ? void 0 : _data$tasks.filter(task => {\n    const taskDateNormalized = normalizeTaskDate(task.globalTaskDate);\n    console.log(normalizeTaskDate(task.globalTaskDate));\n    return currentDateOnly.getTime() === taskDateNormalized.getTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: divStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: tasksDivStyles,\n      children: [dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: taskDivStyles\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = DayCard;\nexport default DayCard;\nvar _c;\n$RefreshReg$(_c, \"DayCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DayCard","date","data","_data$tasks","divStyles","backgroundColor","border","width","aspectRatio","margin","display","flexDirection","alignItems","justifyContent","tasksDivStyles","height","marginTop","taskDivStyles","marginLeft","formattedDate","toLocaleDateString","weekday","day","replace","char","toUpperCase","currentDateOnly","Date","setHours","normalizeTaskDate","taskDate","mysqlDate","dayTasks","tasks","filter","task","taskDateNormalized","globalTaskDate","console","log","getTime","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","taskId","_c","$RefreshReg$"],"sources":["D:/coso codoso/Scheduler 3000/scheduler-3000-frontend/src/components/dayCard.jsx"],"sourcesContent":["import React, { useState } from 'react'; \r\n\r\nconst DayCard = ({ date, data }) => {      \r\n\r\n  const divStyles = {\r\n      backgroundColor: 'white',\r\n      border: '2px solid black',\r\n      width: 'calc(14.28571428% - 4px)',\r\n      aspectRatio: '1 / 0.5',\r\n      margin: '0px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',      \r\n  };\r\n\r\n  const tasksDivStyles = {\r\n    backgroundColor: 'lightgrey',\r\n    width: '100%',\r\n    height: '10%',\r\n    display: 'flex',    \r\n    justifyContent: 'flex-end',\r\n    marginTop: 'auto'\r\n  };\r\n\r\n  const taskDivStyles = {\r\n    backgroundColor: 'green',\r\n    width: '20px',\r\n    height: '100%',\r\n    marginLeft: '2px',    \r\n  };\r\n\r\n  const formattedDate = date\r\n    ? date.toLocaleDateString('es-ES', { weekday: 'long', day: 'numeric' })\r\n      .replace(/^\\w/, (char) => char.toUpperCase())\r\n      .replace(/(?:^|\\s)\\w/g, (char) => char.toUpperCase())\r\n    : 'No date provided';\r\n  \r\n  const currentDateOnly = new Date(date);\r\n  currentDateOnly.setHours(0, 0, 0, 0); \r\n  \r\n  const normalizeTaskDate = (taskDate) => {\r\n    const mysqlDate = new Date(taskDate); \r\n    mysqlDate.setHours(0, 0, 0, 0); \r\n    return mysqlDate;\r\n  };\r\n  \r\n  const dayTasks = data?.tasks?.filter(task => {\r\n    const taskDateNormalized = normalizeTaskDate(task.globalTaskDate);\r\n    console.log(normalizeTaskDate(task.globalTaskDate));\r\n    return currentDateOnly.getTime() === taskDateNormalized.getTime();\r\n  });\r\n\r\n  return (\r\n    <div style={divStyles}>\r\n\r\n      <h3>{formattedDate}</h3>      \r\n      <div style={tasksDivStyles}>\r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n        {dayTasks.map((task) => (\r\n          <div key={task.taskId} style={taskDivStyles}></div>\r\n        ))}  \r\n      </div>      \r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default DayCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
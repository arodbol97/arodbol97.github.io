{"ast":null,"code":"import{useState}from\"react\";const useTaskNew=()=>{const[data,setData]=useState(null);const[global,setGlobal]=useState('');const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const addTask=async newTask=>{setLoading(true);setError(null);if(newTask.globalTask===true){setGlobal('global-');}try{const response=await fetch(`http://localhost:3001/${global}tasks/new`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newTask)});if(!response.ok){throw new Error('Failed to create a new task');}const result=await response.json();setData(result);return result;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};return{addTask,data,error,loading};};export default useTaskNew;","map":{"version":3,"names":["useState","useTaskNew","data","setData","global","setGlobal","error","setError","loading","setLoading","addTask","newTask","globalTask","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","err","message"],"sources":["D:/coso codoso/Scheduler 3000/arodbol97.github.io/src/components/useTaskNew.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useTaskNew = () => {\r\n  const [data, setData] = useState(null);\r\n  const [global, setGlobal] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const addTask = async (newTask) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (newTask.globalTask === true) {\r\n      setGlobal('global-');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/${global}tasks/new`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create a new task');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setData(result);\r\n      return result; \r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err; \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { addTask, data, error, loading };\r\n};\r\n\r\nexport default useTaskNew;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGH,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACI,MAAM,CAAEC,SAAS,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACM,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAU,OAAO,CAAG,KAAO,CAAAC,OAAO,EAAK,CACjCF,UAAU,CAAC,IAAI,CAAC,CAChBF,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAII,OAAO,CAACC,UAAU,GAAK,IAAI,CAAE,CAC/BP,SAAS,CAAC,SAAS,CAAC,CACtB,CAEA,GAAI,CACF,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yBAAyBV,MAAM,WAAW,CAAE,CACvEW,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,OAAO,CAC9B,CAAC,CAAC,CAEF,GAAI,CAACE,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACpCpB,OAAO,CAACmB,MAAM,CAAC,CACf,MAAO,CAAAA,MAAM,CACf,CAAE,MAAOE,GAAG,CAAE,CACZjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,CAAC,CACrB,KAAM,CAAAD,GAAG,CACX,CAAC,OAAS,CACRf,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,MAAO,CAAEC,OAAO,CAAER,IAAI,CAAEI,KAAK,CAAEE,OAAQ,CAAC,CAC1C,CAAC,CAED,cAAe,CAAAP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
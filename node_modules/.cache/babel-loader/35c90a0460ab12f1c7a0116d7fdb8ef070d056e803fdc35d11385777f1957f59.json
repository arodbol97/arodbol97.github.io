{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Tooltip}from\"react-tooltip\";import\"react-tooltip/dist/react-tooltip.css\";import useGlobalTaskUpdate from'./useGlobalTaskUpdate';import Month from'./month';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DayCard=_ref=>{let{date,data}=_ref;const[dayTasks,setDayTasks]=useState([]);const divStyles={backgroundColor:'white',border:'2px solid black',width:'calc(14.28571428% - 4px)',aspectRatio:'1 / 0.5',margin:'0px',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'};const tasksDivStyles={backgroundColor:'lightgrey',width:'100%',height:'14%',display:'flex',justifyContent:'flex-end',marginTop:'auto'};const taskDivStyles={width:'20px',height:'100%',marginLeft:'2px',cursor:'pointer'};const{updateStatus,loading}=useGlobalTaskUpdate();const formattedDate=date?date.toLocaleDateString('es-ES',{weekday:'long',day:'numeric'}).replace(/^\\w/,char=>char.toUpperCase()).replace(/(?:^|\\s)\\w/g,char=>char.toUpperCase()):'No date provided';const handleDayClick=()=>{};const handleTaskClick=async(id,dateId,status)=>{switch(status){case'pending':status='done';break;case'done':status='failed';break;case'failed':status='justified';break;case'justified':status='pending';break;default:console.log(\"Invalid status\");break;}await updateStatus({globalTaskId:id,globalTaskDateId:dateId,globalTaskStatus:status});setDayTasks(prevTasks=>prevTasks.map(task=>task.globalTaskId===id?{...task,globalTaskStatus:status}:task));};useEffect(()=>{if(data!==null&&data!==void 0&&data.tasks&&date){const filteredTasks=data.tasks.filter(task=>{const taskDateNormalized=new Date(task.globalTaskDate);taskDateNormalized.setHours(0,0,0,0);const currentDateNormalized=new Date(date);currentDateNormalized.setHours(0,0,0,0);return currentDateNormalized.getTime()===taskDateNormalized.getTime();});setDayTasks(filteredTasks);}},[data,date]);return/*#__PURE__*/_jsxs(\"div\",{style:divStyles,children:[/*#__PURE__*/_jsx(\"h3\",{children:formattedDate}),/*#__PURE__*/_jsx(\"div\",{style:tasksDivStyles,children:dayTasks.map(task=>/*#__PURE__*/_jsx(\"div\",{style:{...taskDivStyles,backgroundColor:task.globalTaskStatus==='pending'?'#1234':task.globalTaskStatus==='done'?'green':task.globalTaskStatus==='failed'?'red':task.globalTaskStatus==='justified'?'orange':'grey'},\"data-tooltip-id\":`task-tooltip-${task.globalTaskId}`,\"data-tooltip-content\":task.globalTaskName,onClick:()=>handleTaskClick(task.globalTaskId,task.globalTaskDateId,task.globalTaskStatus),children:/*#__PURE__*/_jsx(Tooltip,{id:`task-tooltip-${task.globalTaskId}`})},task.globalTaskId))})]});};export default DayCard;","map":{"version":3,"names":["React","useState","useEffect","Tooltip","useGlobalTaskUpdate","Month","jsx","_jsx","jsxs","_jsxs","DayCard","_ref","date","data","dayTasks","setDayTasks","divStyles","backgroundColor","border","width","aspectRatio","margin","display","flexDirection","alignItems","justifyContent","tasksDivStyles","height","marginTop","taskDivStyles","marginLeft","cursor","updateStatus","loading","formattedDate","toLocaleDateString","weekday","day","replace","char","toUpperCase","handleDayClick","handleTaskClick","id","dateId","status","console","log","globalTaskId","globalTaskDateId","globalTaskStatus","prevTasks","map","task","tasks","filteredTasks","filter","taskDateNormalized","Date","globalTaskDate","setHours","currentDateNormalized","getTime","style","children","globalTaskName","onClick"],"sources":["D:/coso codoso/Scheduler 3000/arodbol97.github.io/scheduler/src/components/dayCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport { Tooltip } from \"react-tooltip\";\r\nimport \"react-tooltip/dist/react-tooltip.css\";\r\nimport useGlobalTaskUpdate from './useGlobalTaskUpdate';\r\nimport Month from './month';\r\n\r\nconst DayCard = ({ date, data }) => {      \r\n\r\n  const [dayTasks, setDayTasks] = useState([]);\r\n\r\n  const divStyles = {\r\n      backgroundColor: 'white',\r\n      border: '2px solid black',\r\n      width: 'calc(14.28571428% - 4px)',\r\n      aspectRatio: '1 / 0.5',\r\n      margin: '0px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',      \r\n  };\r\n\r\n  const tasksDivStyles = {\r\n    backgroundColor: 'lightgrey',\r\n    width: '100%',\r\n    height: '14%',\r\n    display: 'flex',    \r\n    justifyContent: 'flex-end',\r\n    marginTop: 'auto'\r\n  };\r\n\r\n  const taskDivStyles = {    \r\n    width: '20px',\r\n    height: '100%',\r\n    marginLeft: '2px',    \r\n    cursor: 'pointer'\r\n  };\r\n\r\n  const {updateStatus, loading} = useGlobalTaskUpdate();\r\n\r\n  const formattedDate = date\r\n    ? date.toLocaleDateString('es-ES', { weekday: 'long', day: 'numeric' })\r\n      .replace(/^\\w/, (char) => char.toUpperCase())\r\n      .replace(/(?:^|\\s)\\w/g, (char) => char.toUpperCase())\r\n    : 'No date provided';\r\n    \r\n\r\n  const handleDayClick = () => {\r\n\r\n  };\r\n\r\n  const handleTaskClick = async (id, dateId, status) => {    \r\n    switch (status) {\r\n      case 'pending':\r\n        status = 'done';\r\n        break;\r\n      case 'done':\r\n        status = 'failed';\r\n        break;\r\n      case 'failed':\r\n        status = 'justified';\r\n        break;\r\n      case 'justified':\r\n        status = 'pending';\r\n        break;    \r\n      default:\r\n        console.log(\"Invalid status\");\r\n        break;\r\n    }\r\n    await updateStatus({globalTaskId: id, globalTaskDateId: dateId, globalTaskStatus: status});\r\n    \r\n    setDayTasks(prevTasks =>\r\n      prevTasks.map(task =>\r\n        task.globalTaskId === id\r\n          ? { ...task, globalTaskStatus: status }\r\n          : task\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {   \r\n    if (data?.tasks && date) {\r\n      const filteredTasks = data.tasks.filter(task => {\r\n        const taskDateNormalized = new Date(task.globalTaskDate);\r\n        taskDateNormalized.setHours(0, 0, 0, 0);\r\n  \r\n        const currentDateNormalized = new Date(date);\r\n        currentDateNormalized.setHours(0, 0, 0, 0);\r\n  \r\n        return currentDateNormalized.getTime() === taskDateNormalized.getTime();\r\n      });\r\n      setDayTasks(filteredTasks);\r\n    }\r\n    }, [data, date]);\r\n\r\n  return (\r\n    <div style={divStyles}>\r\n\r\n      <h3>{formattedDate}</h3>      \r\n\r\n      <div style={tasksDivStyles}>\r\n        {dayTasks.map((task) => (\r\n          <div \r\n            key={task.globalTaskId} \r\n            style={{\r\n              ...taskDivStyles, \r\n              backgroundColor: task.globalTaskStatus === 'pending' \r\n                ? '#1234' \r\n                : task.globalTaskStatus === 'done' \r\n                ? 'green' \r\n                : task.globalTaskStatus === 'failed' \r\n                ? 'red' \r\n                : task.globalTaskStatus === 'justified' \r\n                ? 'orange' \r\n                : 'grey'\r\n            }} \r\n            data-tooltip-id={`task-tooltip-${task.globalTaskId}`}\r\n            data-tooltip-content={task.globalTaskName}\r\n            onClick={() => handleTaskClick(task.globalTaskId, task.globalTaskDateId, task.globalTaskStatus)}>\r\n            \r\n            <Tooltip id={`task-tooltip-${task.globalTaskId}`}/>\r\n          </div>\r\n        ))}\r\n      </div>      \r\n\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default DayCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState}from'react';import useTaskNew from'./useGlobalTaskNew';import Month from'./month';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NewGlobalTaskForm=_ref=>{let{handleComponentChange}=_ref;const{addTask,error}=useTaskNew();const[globalTaskName,setGlobalTaskName]=useState('');const[globalTaskDescription,setGlobalTaskDescription]=useState('');const[globalTaskPoints,setGlobalTaskPoints]=useState(100);const[selectedDays,setSelectedDays]=useState([0,1,2,3,4,5,6]);const mainDivStyles={display:'flex',flexWrap:'wrap',alignItems:'center',justifyContent:'center',height:'90vh'};const formDivStyles={border:'2px solid grey',width:'50%',display:'flex',flexWrap:'wrap'};const fieldsetStyles={border:'0px',width:'100%',display:'flex',flexWrap:'wrap'};const legendStyles={fontSize:'22px',fontWeight:'bold'};const labelStyles={color:'black',width:'20%',textAlign:'right'};const inputStyles={width:'100%',marginBottom:'10px',backgroundColor:'lightgrey'};const textareaStyles={width:'100%',marginBottom:'10px',backgroundColor:'lightgrey',resize:'vertical'};const handleChange=event=>{const{name,value}=event.target;if(name==='name'){setGlobalTaskName(value);}else if(name==='description'){setGlobalTaskDescription(value);}else if(name==='points'){setGlobalTaskPoints(value);}else if(name==='days'){const newSelectedDays=[...selectedDays];const day=parseInt(value,10);if(newSelectedDays.includes(day)){newSelectedDays.splice(newSelectedDays.indexOf(day),1);}else{newSelectedDays.push(day);}setSelectedDays(newSelectedDays);}};const handleSubmit=async event=>{event.preventDefault();const formData={globalTaskName,globalTaskDescription,globalTaskPoints,globalTaskUser:1,globalTaskDays:JSON.stringify(selectedDays),globalTask:true};try{await addTask(formData);handleComponentChange(/*#__PURE__*/_jsx(Month,{}));}catch(error){console.error('Error creating global task:',error);document.getElementById('formError').innerHTML=error.message;}};const cancelForm=()=>{setGlobalTaskName('');setGlobalTaskDescription('');setGlobalTaskPoints(100);setSelectedDays([0,1,2,3,4,5,6]);handleComponentChange(/*#__PURE__*/_jsx(Month,{}));};return/*#__PURE__*/_jsx(\"div\",{style:mainDivStyles,children:/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,style:formDivStyles,id:\"newGlobalTaskForm\",children:/*#__PURE__*/_jsxs(\"fieldset\",{style:fieldsetStyles,children:[/*#__PURE__*/_jsx(\"legend\",{style:legendStyles,children:\"Nueva Tarea Global\"}),/*#__PURE__*/_jsx(\"label\",{style:labelStyles,children:\"Nombre:\"}),/*#__PURE__*/_jsx(\"input\",{style:inputStyles,type:\"text\",name:\"name\",value:globalTaskName,maxLength:50,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{style:labelStyles,children:\"Descripci\\xF3n:\"}),/*#__PURE__*/_jsx(\"textarea\",{style:textareaStyles,name:\"description\",value:globalTaskDescription,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{style:labelStyles,children:\"Puntos:\"}),/*#__PURE__*/_jsx(\"input\",{style:inputStyles,type:\"number\",name:\"points\",value:globalTaskPoints,onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{color:'black'},children:\"Seleccionar d\\xEDas:\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',gap:'10px'},children:['Lunes','Martes','Miércoles','Jueves','Viernes','Sábado','Domingo'].map((day,index)=>/*#__PURE__*/_jsxs(\"label\",{style:labelStyles,children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"days\",value:(index+1)%7,checked:selectedDays.includes((index+1)%7),onChange:handleChange}),day]},index))})]}),/*#__PURE__*/_jsx(\"button\",{style:{width:'calc(50% - 0px)',marginTop:'15px',boxSizing:'border-box',backgroundColor:'red',color:'white',fontWeight:'bold'},type:\"button\",onClick:cancelForm,children:\"Cancelar\"}),/*#__PURE__*/_jsx(\"button\",{style:{width:'calc(50% - 0px)',marginTop:'15px',boxSizing:'border-box',backgroundColor:'#007bff',color:'white',fontWeight:'bold'},type:\"submit\",children:\"Confirmar\"}),/*#__PURE__*/_jsx(\"span\",{id:\"formError\",style:{width:'100%',textAlign:'center',color:'red',fontSize:'15px'}})]})})});};export default NewGlobalTaskForm;","map":{"version":3,"names":["React","useState","useTaskNew","Month","jsx","_jsx","jsxs","_jsxs","NewGlobalTaskForm","_ref","handleComponentChange","addTask","error","globalTaskName","setGlobalTaskName","globalTaskDescription","setGlobalTaskDescription","globalTaskPoints","setGlobalTaskPoints","selectedDays","setSelectedDays","mainDivStyles","display","flexWrap","alignItems","justifyContent","height","formDivStyles","border","width","fieldsetStyles","legendStyles","fontSize","fontWeight","labelStyles","color","textAlign","inputStyles","marginBottom","backgroundColor","textareaStyles","resize","handleChange","event","name","value","target","newSelectedDays","day","parseInt","includes","splice","indexOf","push","handleSubmit","preventDefault","formData","globalTaskUser","globalTaskDays","JSON","stringify","globalTask","console","document","getElementById","innerHTML","message","cancelForm","style","children","onSubmit","id","type","maxLength","onChange","gap","map","index","checked","marginTop","boxSizing","onClick"],"sources":["D:/coso codoso/Scheduler 3000/arodbol97.github.io/scheduler/src/components/newGlobalTaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport useTaskNew from './useGlobalTaskNew'; \r\nimport Month from './month';\r\n\r\nconst NewGlobalTaskForm = ({handleComponentChange}) => {\r\n  const { addTask, error } = useTaskNew();\r\n\r\n  const [globalTaskName, setGlobalTaskName] = useState('');\r\n  const [globalTaskDescription, setGlobalTaskDescription] = useState('');\r\n  const [globalTaskPoints, setGlobalTaskPoints] = useState(100);\r\n  const [selectedDays, setSelectedDays] = useState([0, 1, 2, 3, 4, 5, 6]); \r\n\r\n  const mainDivStyles = {    \r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '90vh'\r\n  };\r\n\r\n  const formDivStyles = {\r\n    border: '2px solid grey',\r\n    width: '50%',    \r\n    display: 'flex',\r\n    flexWrap: 'wrap',    \r\n  };\r\n\r\n  const fieldsetStyles = {\r\n    border: '0px',\r\n    width: '100%',    \r\n    display: 'flex',\r\n    flexWrap: 'wrap',     \r\n  };\r\n\r\n  const legendStyles = {\r\n    fontSize: '22px',\r\n    fontWeight: 'bold'    \r\n  };\r\n\r\n  const labelStyles = {\r\n    color: 'black',\r\n    width: '20%',\r\n    textAlign: 'right',    \r\n  };\r\n\r\n  const inputStyles = {\r\n    width: '100%',\r\n    marginBottom: '10px',\r\n    backgroundColor: 'lightgrey',    \r\n  };\r\n\r\n  const textareaStyles = {\r\n    width: '100%',\r\n    marginBottom: '10px',\r\n    backgroundColor: 'lightgrey',\r\n    resize: 'vertical',    \r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'name') {\r\n      setGlobalTaskName(value);\r\n    } else if (name === 'description') {\r\n      setGlobalTaskDescription(value);\r\n    } else if (name === 'points') {\r\n      setGlobalTaskPoints(value);\r\n    } else if (name === 'days') {\r\n      const newSelectedDays = [...selectedDays];\r\n      const day = parseInt(value, 10);\r\n      if (newSelectedDays.includes(day)) {\r\n        newSelectedDays.splice(newSelectedDays.indexOf(day), 1); \r\n      } else {\r\n        newSelectedDays.push(day); \r\n      }\r\n      setSelectedDays(newSelectedDays);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();    \r\n\r\n    const formData = {\r\n      globalTaskName,\r\n      globalTaskDescription,\r\n      globalTaskPoints,\r\n      globalTaskUser: 1, \r\n      globalTaskDays: JSON.stringify(selectedDays),\r\n      globalTask: true,\r\n    };\r\n\r\n    try {\r\n      await addTask(formData);\r\n      handleComponentChange(<Month/>);\r\n    } catch (error) {\r\n      console.error('Error creating global task:', error);\r\n      document.getElementById('formError').innerHTML = error.message;\r\n    }\r\n  };\r\n\r\n  const cancelForm = () => {\r\n    setGlobalTaskName('');\r\n    setGlobalTaskDescription('');\r\n    setGlobalTaskPoints(100);\r\n    setSelectedDays([0, 1, 2, 3, 4, 5, 6]);\r\n    handleComponentChange(<Month/>);\r\n  };\r\n\r\n  return (\r\n    <div style={mainDivStyles}>      \r\n      <form onSubmit={handleSubmit} style={formDivStyles} id='newGlobalTaskForm'>\r\n        <fieldset style={fieldsetStyles}>\r\n          <legend style={legendStyles}>Nueva Tarea Global</legend>\r\n          <label style={labelStyles}>Nombre:</label>\r\n          <input\r\n            style={inputStyles}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={globalTaskName}\r\n            maxLength={50}\r\n            onChange={handleChange}\r\n          />\r\n          <label style={labelStyles}>Descripción:</label>\r\n          <textarea\r\n            style={textareaStyles}\r\n            name=\"description\"\r\n            value={globalTaskDescription}\r\n            onChange={handleChange}\r\n          />\r\n          <label style={labelStyles}>Puntos:</label>\r\n          <input\r\n            style={inputStyles}\r\n            type=\"number\"\r\n            name=\"points\"\r\n            value={globalTaskPoints}\r\n            onChange={handleChange}\r\n          />\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <label style={{ color: 'black' }}>Seleccionar días:</label>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n              {['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'].map((day, index) => (\r\n                <label key={index} style={labelStyles}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"days\"\r\n                    value={(index+1)%7}\r\n                    checked={selectedDays.includes((index+1)%7)}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {day}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <button\r\n            style={{\r\n              width: 'calc(50% - 0px)',\r\n              marginTop: '15px',\r\n              boxSizing: 'border-box',\r\n              backgroundColor: 'red',\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n            }}\r\n            type=\"button\"\r\n            onClick={cancelForm}\r\n          >\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            style={{\r\n              width: 'calc(50% - 0px)',\r\n              marginTop: '15px',\r\n              boxSizing: 'border-box',\r\n              backgroundColor: '#007bff',\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n            }}\r\n            type=\"submit\"\r\n          >\r\n            Confirmar\r\n          </button>\r\n          <span id=\"formError\" style={{ width: '100%', textAlign: 'center', color: 'red', fontSize: '15px' }}></span>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGlobalTaskForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAC3C,MAAO,CAAAC,KAAK,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAA6B,IAA5B,CAACC,qBAAqB,CAAC,CAAAD,IAAA,CAChD,KAAM,CAAEE,OAAO,CAAEC,KAAM,CAAC,CAAGV,UAAU,CAAC,CAAC,CAEvC,KAAM,CAACW,cAAc,CAAEC,iBAAiB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACc,qBAAqB,CAAEC,wBAAwB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtE,KAAM,CAACgB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjB,QAAQ,CAAC,GAAG,CAAC,CAC7D,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAEvE,KAAM,CAAAoB,aAAa,CAAG,CACpBC,OAAO,CAAE,MAAM,CACfC,QAAQ,CAAE,MAAM,CAChBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,MAAM,CAAE,MACV,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,CACpBC,MAAM,CAAE,gBAAgB,CACxBC,KAAK,CAAE,KAAK,CACZP,OAAO,CAAE,MAAM,CACfC,QAAQ,CAAE,MACZ,CAAC,CAED,KAAM,CAAAO,cAAc,CAAG,CACrBF,MAAM,CAAE,KAAK,CACbC,KAAK,CAAE,MAAM,CACbP,OAAO,CAAE,MAAM,CACfC,QAAQ,CAAE,MACZ,CAAC,CAED,KAAM,CAAAQ,YAAY,CAAG,CACnBC,QAAQ,CAAE,MAAM,CAChBC,UAAU,CAAE,MACd,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,CAClBC,KAAK,CAAE,OAAO,CACdN,KAAK,CAAE,KAAK,CACZO,SAAS,CAAE,OACb,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,CAClBR,KAAK,CAAE,MAAM,CACbS,YAAY,CAAE,MAAM,CACpBC,eAAe,CAAE,WACnB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,CACrBX,KAAK,CAAE,MAAM,CACbS,YAAY,CAAE,MAAM,CACpBC,eAAe,CAAE,WAAW,CAC5BE,MAAM,CAAE,UACV,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,KAAK,CAACG,MAAM,CACpC,GAAIF,IAAI,GAAK,MAAM,CAAE,CACnB9B,iBAAiB,CAAC+B,KAAK,CAAC,CAC1B,CAAC,IAAM,IAAID,IAAI,GAAK,aAAa,CAAE,CACjC5B,wBAAwB,CAAC6B,KAAK,CAAC,CACjC,CAAC,IAAM,IAAID,IAAI,GAAK,QAAQ,CAAE,CAC5B1B,mBAAmB,CAAC2B,KAAK,CAAC,CAC5B,CAAC,IAAM,IAAID,IAAI,GAAK,MAAM,CAAE,CAC1B,KAAM,CAAAG,eAAe,CAAG,CAAC,GAAG5B,YAAY,CAAC,CACzC,KAAM,CAAA6B,GAAG,CAAGC,QAAQ,CAACJ,KAAK,CAAE,EAAE,CAAC,CAC/B,GAAIE,eAAe,CAACG,QAAQ,CAACF,GAAG,CAAC,CAAE,CACjCD,eAAe,CAACI,MAAM,CAACJ,eAAe,CAACK,OAAO,CAACJ,GAAG,CAAC,CAAE,CAAC,CAAC,CACzD,CAAC,IAAM,CACLD,eAAe,CAACM,IAAI,CAACL,GAAG,CAAC,CAC3B,CACA5B,eAAe,CAAC2B,eAAe,CAAC,CAClC,CACF,CAAC,CAED,KAAM,CAAAO,YAAY,CAAG,KAAO,CAAAX,KAAK,EAAK,CACpCA,KAAK,CAACY,cAAc,CAAC,CAAC,CAEtB,KAAM,CAAAC,QAAQ,CAAG,CACf3C,cAAc,CACdE,qBAAqB,CACrBE,gBAAgB,CAChBwC,cAAc,CAAE,CAAC,CACjBC,cAAc,CAAEC,IAAI,CAACC,SAAS,CAACzC,YAAY,CAAC,CAC5C0C,UAAU,CAAE,IACd,CAAC,CAED,GAAI,CACF,KAAM,CAAAlD,OAAO,CAAC6C,QAAQ,CAAC,CACvB9C,qBAAqB,cAACL,IAAA,CAACF,KAAK,GAAC,CAAC,CAAC,CACjC,CAAE,MAAOS,KAAK,CAAE,CACdkD,OAAO,CAAClD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDmD,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,CAAGrD,KAAK,CAACsD,OAAO,CAChE,CACF,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBrD,iBAAiB,CAAC,EAAE,CAAC,CACrBE,wBAAwB,CAAC,EAAE,CAAC,CAC5BE,mBAAmB,CAAC,GAAG,CAAC,CACxBE,eAAe,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CACtCV,qBAAqB,cAACL,IAAA,CAACF,KAAK,GAAC,CAAC,CAAC,CACjC,CAAC,CAED,mBACEE,IAAA,QAAK+D,KAAK,CAAE/C,aAAc,CAAAgD,QAAA,cACxBhE,IAAA,SAAMiE,QAAQ,CAAEhB,YAAa,CAACc,KAAK,CAAEzC,aAAc,CAAC4C,EAAE,CAAC,mBAAmB,CAAAF,QAAA,cACxE9D,KAAA,aAAU6D,KAAK,CAAEtC,cAAe,CAAAuC,QAAA,eAC9BhE,IAAA,WAAQ+D,KAAK,CAAErC,YAAa,CAAAsC,QAAA,CAAC,oBAAkB,CAAQ,CAAC,cACxDhE,IAAA,UAAO+D,KAAK,CAAElC,WAAY,CAAAmC,QAAA,CAAC,SAAO,CAAO,CAAC,cAC1ChE,IAAA,UACE+D,KAAK,CAAE/B,WAAY,CACnBmC,IAAI,CAAC,MAAM,CACX5B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEhC,cAAe,CACtB4D,SAAS,CAAE,EAAG,CACdC,QAAQ,CAAEhC,YAAa,CACxB,CAAC,cACFrC,IAAA,UAAO+D,KAAK,CAAElC,WAAY,CAAAmC,QAAA,CAAC,iBAAY,CAAO,CAAC,cAC/ChE,IAAA,aACE+D,KAAK,CAAE5B,cAAe,CACtBI,IAAI,CAAC,aAAa,CAClBC,KAAK,CAAE9B,qBAAsB,CAC7B2D,QAAQ,CAAEhC,YAAa,CACxB,CAAC,cACFrC,IAAA,UAAO+D,KAAK,CAAElC,WAAY,CAAAmC,QAAA,CAAC,SAAO,CAAO,CAAC,cAC1ChE,IAAA,UACE+D,KAAK,CAAE/B,WAAY,CACnBmC,IAAI,CAAC,QAAQ,CACb5B,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAE5B,gBAAiB,CACxByD,QAAQ,CAAEhC,YAAa,CACxB,CAAC,cACFnC,KAAA,QAAK6D,KAAK,CAAE,CAAE9B,YAAY,CAAE,MAAO,CAAE,CAAA+B,QAAA,eACnChE,IAAA,UAAO+D,KAAK,CAAE,CAAEjC,KAAK,CAAE,OAAQ,CAAE,CAAAkC,QAAA,CAAC,sBAAiB,CAAO,CAAC,cAC3DhE,IAAA,QAAK+D,KAAK,CAAE,CAAE9C,OAAO,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAM,CAAEoD,GAAG,CAAE,MAAO,CAAE,CAAAN,QAAA,CAC5D,CAAC,OAAO,CAAE,QAAQ,CAAE,WAAW,CAAE,QAAQ,CAAE,SAAS,CAAE,QAAQ,CAAE,SAAS,CAAC,CAACO,GAAG,CAAC,CAAC5B,GAAG,CAAE6B,KAAK,gBACzFtE,KAAA,UAAmB6D,KAAK,CAAElC,WAAY,CAAAmC,QAAA,eACpChE,IAAA,UACEmE,IAAI,CAAC,UAAU,CACf5B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE,CAACgC,KAAK,CAAC,CAAC,EAAE,CAAE,CACnBC,OAAO,CAAE3D,YAAY,CAAC+B,QAAQ,CAAC,CAAC2B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAE,CAC5CH,QAAQ,CAAEhC,YAAa,CACxB,CAAC,CACDM,GAAG,GARM6B,KASL,CACR,CAAC,CACC,CAAC,EACH,CAAC,cACNxE,IAAA,WACE+D,KAAK,CAAE,CACLvC,KAAK,CAAE,iBAAiB,CACxBkD,SAAS,CAAE,MAAM,CACjBC,SAAS,CAAE,YAAY,CACvBzC,eAAe,CAAE,KAAK,CACtBJ,KAAK,CAAE,OAAO,CACdF,UAAU,CAAE,MACd,CAAE,CACFuC,IAAI,CAAC,QAAQ,CACbS,OAAO,CAAEd,UAAW,CAAAE,QAAA,CACrB,UAED,CAAQ,CAAC,cACThE,IAAA,WACE+D,KAAK,CAAE,CACLvC,KAAK,CAAE,iBAAiB,CACxBkD,SAAS,CAAE,MAAM,CACjBC,SAAS,CAAE,YAAY,CACvBzC,eAAe,CAAE,SAAS,CAC1BJ,KAAK,CAAE,OAAO,CACdF,UAAU,CAAE,MACd,CAAE,CACFuC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CACd,WAED,CAAQ,CAAC,cACThE,IAAA,SAAMkE,EAAE,CAAC,WAAW,CAACH,KAAK,CAAE,CAAEvC,KAAK,CAAE,MAAM,CAAEO,SAAS,CAAE,QAAQ,CAAED,KAAK,CAAE,KAAK,CAAEH,QAAQ,CAAE,MAAO,CAAE,CAAO,CAAC,EACnG,CAAC,CACP,CAAC,CACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
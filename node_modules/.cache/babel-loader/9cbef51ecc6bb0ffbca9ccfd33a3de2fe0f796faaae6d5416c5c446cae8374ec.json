{"ast":null,"code":"var _jsxFileName = \"D:\\\\coso codoso\\\\Scheduler 3000\\\\scheduler-3000-frontend\\\\src\\\\components\\\\day.jsx\";\nimport React from 'react';\nimport Task from './task';\nimport useFetch from \"./useFetch\";\nimport { BsPerson, BsPersonSlash } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Day = ({\n  date,\n  data\n}) => {\n  const headerStyles = {\n    backgroundColor: '#282c34',\n    minHeight: '10vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white'\n  };\n  const formattedDate = date ? date.toLocaleDateString('es-ES', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).replace(/^\\w/, char => char.toUpperCase()).replace(/(?:^|\\s)\\w/g, char => char.toUpperCase()) : 'No date provided';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Day;\nexport default Day;\nvar _c;\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"names":["React","Task","useFetch","BsPerson","BsPersonSlash","jsxDEV","_jsxDEV","Day","date","data","headerStyles","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","color","formattedDate","toLocaleDateString","weekday","year","month","day","replace","char","toUpperCase","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/coso codoso/Scheduler 3000/scheduler-3000-frontend/src/components/day.jsx"],"sourcesContent":["import React from 'react';\r\nimport Task from './task';\r\nimport useFetch from \"./useFetch\";\r\nimport { BsPerson, BsPersonSlash } from 'react-icons/bs';\r\n\r\nconst Day = ({date, data}) => {    \r\n  const headerStyles = {\r\n      backgroundColor: '#282c34',\r\n      minHeight: '10vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      color: 'white',\r\n  };    \r\n\r\n  \r\n  const formattedDate = date\r\n    ? date.toLocaleDateString('es-ES', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })\r\n    .replace(/^\\w/, (char) => char.toUpperCase())\r\n    .replace(/(?:^|\\s)\\w/g, (char) => char.toUpperCase())\r\n    : 'No date provided';\r\n\r\n  return (\r\n    <div>\r\n      <h1>{formattedDate}</h1>    \r\n      <pre>{JSON.stringify(data, null, 2)}</pre>\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default Day;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,GAAG,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAI,CAAC,KAAK;EAC5B,MAAMC,YAAY,GAAG;IACjBC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,MAAM;IACjBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,KAAK,EAAE;EACX,CAAC;EAGD,MAAMC,aAAa,GAAGV,IAAI,GACtBA,IAAI,CAACW,kBAAkB,CAAC,OAAO,EAAE;IAAEC,OAAO,EAAE,MAAM;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAU,CAAC,CAAC,CACtGC,OAAO,CAAC,KAAK,EAAGC,IAAI,IAAKA,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAC5CF,OAAO,CAAC,aAAa,EAAGC,IAAI,IAAKA,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,GACnD,kBAAkB;EAEtB,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAKT;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBzB,OAAA;MAAAqB,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACxB,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACG,EAAA,GAxBI3B,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
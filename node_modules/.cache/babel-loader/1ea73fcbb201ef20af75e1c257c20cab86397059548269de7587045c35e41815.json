{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useTaskNew = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [global, setGlobal] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const addTask = async newTask => {\n    setLoading(true);\n    setError(null);\n    if (newTask.globalTask === true) {\n      setGlobal('global-');\n    }\n    try {\n      const response = await fetch(`http://localhost:3001/${global}tasks/new`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create a new task');\n      }\n      const result = await response.json();\n      setData(result);\n      return result;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    addTask,\n    data,\n    error,\n    loading\n  };\n};\n_s(useTaskNew, \"tsPa6buA9jcfSDk3LOnJ1Y7JOCM=\");\nexport default useTaskNew;","map":{"version":3,"names":["useState","useTaskNew","_s","data","setData","global","setGlobal","error","setError","loading","setLoading","addTask","newTask","globalTask","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","err","message"],"sources":["D:/coso codoso/Scheduler 3000/scheduler-3000-frontend/src/components/useTaskNew.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useTaskNew = () => {\r\n  const [data, setData] = useState(null);\r\n  const [global, setGlobal] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const addTask = async (newTask) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (newTask.globalTask === true) {\r\n      setGlobal('global-');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/${global}tasks/new`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create a new task');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setData(result);\r\n      return result; \r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err; \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { addTask, data, error, loading };\r\n};\r\n\r\nexport default useTaskNew;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,OAAO,GAAG,MAAOC,OAAO,IAAK;IACjCF,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAII,OAAO,CAACC,UAAU,KAAK,IAAI,EAAE;MAC/BP,SAAS,CAAC,SAAS,CAAC;IACtB;IAEA,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBV,MAAM,WAAW,EAAE;QACvEW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACpCpB,OAAO,CAACmB,MAAM,CAAC;MACf,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,CAAC;MACrB,MAAMD,GAAG;IACX,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAAEC,OAAO;IAAER,IAAI;IAAEI,KAAK;IAAEE;EAAQ,CAAC;AAC1C,CAAC;AAACP,EAAA,CAvCID,UAAU;AAyChB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}